<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCADIAMgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAooooAKKKKACiuW8V+PvD3g2Ddql6onIyltH80r/h2+
        prxu/wDix448c3raf4N0yW1hJxviXfJj1ZzwtAHvWq69pWhwmbVNRtrRB3mkC5+g6mvPdX+PvhDTiyWn
        2vUXH/PGPap/FsfyrkdI+AmtaxP9u8Xa4wkflo42Msn4u3A/DNej6N8H/BWjqpXSEu5V/wCWl2xkJ/A8
        fpQB5vc/tD6tduU0fwyhz0MjtIfyUCoP+FmfFvUPms/DzIp6bNOc/wDoVfQFpp1lYoEtLSCBR0EUYUfp
        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
        AFFFFABRRRQAUUUUAFFFFAH/2Q==
</value>
  </data>
</root>